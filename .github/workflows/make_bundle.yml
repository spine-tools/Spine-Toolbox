name: Make PyInstaller Bundle

on:
  workflow_call:
    inputs:
      git-ref:
        description: "Git branch, tag or SHA to bundle."
        required: true
        type: string
        default: ""

jobs:
  bundle:
    name: Bundle
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ inputs.git-ref }}
          fetch-depth: 0
      - name: Test if tag
        id: commit
        continue-on-error: true
        run: |
          git describe --tags --exact-match
          Write-Output "is_tag=$(if ($?) { 'true' } else { 'false' })" >> $Env:GITHUB_OUTPUT
      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip
          cache-dependency-path: |
            pyproject.toml
            requirements.txt
            dev-requirements.txt
      - name: Python full version
        id: py-full
        run: |
          python --version | ForEach-Object { 'ver=' + ($_.Trim() -split '\s+')[1] } >> $Env:GITHUB_OUTPUT
      - name: Install Toolbox from PyPI
        if: steps.commit.outputs.is_tag == 'true'
        run: |
          python -m pip install --upgrade pip
          python -m pip install spinetoolbox
      - name: Install Toolbox from repo
        if: steps.commit.outputs.is_tag == 'false'
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install -r dev-requirements.txt
      - name: Run tests
        if: steps.commit.outputs.is_tag == 'false'
        run: |
          python -m pytest tests/ --verbose
      - name: Install PyInstaller
        run: |
          python -m pip install PyInstaller
      - name: List packages
        run:
          python -m pip list
      - name: Download embeddable Python
        run: |
          mkdir embedded-python
          cd embedded-python
          curl -o python.zip https://www.python.org/ftp/python/${{ steps.py-full.outputs.ver }}/python-${{ steps.py-full.outputs.ver }}-embed-amd64.zip
          tar xf python.zip
          del python.zip
      - name: Edit embedded Python search paths
        run: |
          cd embedded-python
          Add-Content ./*._pth "Lib"
          Add-Content ./*._pth "Lib/site-packages"
          cat ./*._pth
      - name: Download get-pip.py
        run: |
          cd embedded-python
          curl -sSL https://bootstrap.pypa.io/get-pip.py -o get-pip.py
      - name: Install pip for embedded Python
        run : |
          cd embedded-python
          ./python.exe get-pip.py
      - name: Install packages for embedded Python
        run: |
          cd embedded-python/Scripts
          ./pip.exe --version
          ./pip.exe install spinedb-api ipykernel jill
      - name: List packages in embedded Python
        run: |
          cd embedded-python/Scripts
          ./pip.exe list
      - name: Build bundle
        run: |
          python -m PyInstaller spinetoolbox.spec -- --embedded-python=embedded-python
      - name: Get Toolbox version
        id: toolbox-version
        shell: bash
        run: |
          python -c "from importlib.metadata import version; print('version=' + version('spinetoolbox'))" >> $GITHUB_OUTPUT
      - name: Create GitHub release for version ${{ inputs.git-ref }}
        if: steps.commit.outputs.is_tag == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.git-ref }}
          body: |
            See [CHANGELOG.md](https://github.com/spine-tools/Spine-Toolbox/blob/${{ inputs.git-ref }}/CHANGELOG.md) for release notes.
          files: |
            dist/Spine Toolbox/Spine-Toolbox-win-${{ inputs.git-ref }}.zip
      - name: Upload archive
        if: steps.commit.outputs.is_tag == 'false'
        uses: actions/upload-artifact@v4
        with:
          name: Spine-Toolbox-win-${{ steps.toolbox-version.outputs.version }}
          path: "./dist/Spine Toolbox"
          if-no-files-found: error
